package cmd

import (
	"flag"

	"github.com/azhai/gozzo/config"
	"github.com/azhai/xgen/cmd"
	xq "github.com/azhai/xgen/xquery"
	"github.com/k0kubun/pp"
)

var options = new(CommandOptions)

type ServerOptions struct {
	Host         string `hcl:"host,optional" json:"host,omitempty"` // 运行IP
	Port         int    `hcl:"port" json:"port"`                    // 运行端口
	MaxWriteSize int
}

func init() {
	config.PrepareEnv(256)
	flag.StringVar(&options.Host, "s", "", "运行IP")
	flag.IntVar(&options.Port, "p", 9870, "运行端口")
	flag.IntVar(&options.MaxWriteSize, "W", xq.MaxWriteSize, "批量写入最大行数")
	config.PrepareFlags()

	if _, err := cmd.LoadConfigFile(); err != nil {
		panic(err)
	}
	if config.Verbose() {
		pp.Println(options)
	}
}

func GetOptions() (*ServerOptions, *config.RootConfig) {
	options := new(ServerOptions)
	settings, err := config.LoadConfigFile(options)
	if err != nil {
		panic(err)
	}
	logger, err = config.GetConfigLogger()
	if err != nil {
		panic(err)
	}

	if serverHost != "" {
		options.Host = serverHost
	}
	if serverPort > 0 {
		options.Port = serverPort
	}
	options.MaxWriteSize = xq.MaxWriteSize
	if config.Verbose() {
		pp.Println(options)
	}
	return options, settings
}

func GetDefaultLogger() *xutils.Logger {
	return logger
}
